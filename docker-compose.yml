version: '3.4'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine

  redis:
    image: redis:alpine

  seq:
    image: datalust/seq:latest

  sqldata:
    image: mcr.microsoft.com/mssql/server:2017-latest 

  zipkin:
    image: openzipkin/zipkin-slim

  basket-api:
    image: ${REGISTRY:-eshopdapr}/basket.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.API/Dockerfile
    depends_on:
      - identity-api
      - redis

  basket-api-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:basket-api"
    depends_on:
      - basket-api

  blazor-client:
    image: ${REGISTRY:-eshopdapr}/blazor.client:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/BlazorClient.Host/Dockerfile

  catalog-api:
    image: ${REGISTRY:-eshopdapr}/catalog.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      - sqldata

  catalog-api-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:catalog-api"
    depends_on:
      - catalog-api

  identity-api:
    image: ${REGISTRY:-eshopdapr}/identity.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    depends_on:
      - sqldata

  ordering-api:
    image: ${REGISTRY:-eshopdapr}/ordering.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - sqldata

  ordering-api-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:ordering-api"
    depends_on:
      - ordering-api

  payment-api:
    image: ${REGISTRY:-eshopdapr}/payment.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Payment/Payment.API/Dockerfile

  payment-api-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:payment-api"
    depends_on:
      - payment-api

  webshoppingagg:
    image: ${REGISTRY:-eshopdapr}/webshoppingagg:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/Aggregators/Web.Shopping.HttpAggregator/Dockerfile
    depends_on:
      - basket-api
      - catalog-api
      - identity-api
      - ordering-api
      - sqldata

  webshoppingagg-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:webshoppingagg"
    depends_on:
      - webshoppingagg

  webshoppingapigw:
    image: envoyproxy/envoy:v1.14.2

  webshoppingapigw-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:webshoppingapigw"
    depends_on:
      - webshoppingapigw

  webstatus:
    image: xabarilcoding/healthchecksui:5.0.0

  dapr-placement:
    image: "daprio/dapr:1.0.0"

  testmsapi:
    build:
      context: .
      dockerfile: src/Services/TestMS/TestMSApi/Dockerfile
    depends_on:
      - mysql
      - identity-api

  testmsapi-dapr:
    image: "daprio/daprd:1.4.0"
    network_mode: "service:testmsapi"
    depends_on:
      - testmsapi

  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: docker_db
      MYSQL_USER: docker_user
      MYSQL_PASSWORD: docker_pass
    ports:
      - "3306:3306"
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=mysql
      - PMA_USER=docker_user
      - PMA_PASSWORD=docker_pass
    ports:
      - "3000:80"
    volumes:
      - ./docker/phpmyadmin/sessions:/sessions

  #mysql:
  #  image: mysql:latest
  #  command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
  #  environment:
  #    MYSQL_DATABASE: TestApi
  #    MYSQL_USER: testmsapi
  #    MYSQL_PASSWORD: password
  #    MYSQL_ROOT_PASSWORD: root
  #  ports:
  #    - "3306:3306"
  #  volumes:
  #    - db-store:/var/lib/mysql
  #    #- ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf

  #phpmyadmin:
  #  container_name: test_phpmyadmin
  #  image: phpmyadmin/phpmyadmin
  #  environment:
  #    - PMA_ARBITRARY=1
  #    - PMA_HOSTS=mysql
  #    - PMA_USER=testmsapi
  #    - PMA_PASSWORD=root
  #  ports:
  #    - 8080:80